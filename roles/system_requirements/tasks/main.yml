- name: Meet system requirements - root
  block:
    - name: Install required system packages using apt
      import_tasks: apt.yml
      when: ansible_facts['os_family']|lower == 'debian'

    - name: Install required system packages using dnf
      import_tasks: dnf.yml
      when: ansible_facts['os_family']|lower == 'redhat'

    - name: "Start system services"
      ansible.builtin.systemd:
        name: "{{ item }}.service"
        state: started
      loop: "{{ required_system_services }}"

    - name: "Enable system services"
      ansible.builtin.systemd:
        name: "{{ item }}.service"
        enabled: true
      loop: "{{ required_system_services }}"

    - name: "Add {{ system_user_name }} user"
      ansible.builtin.user:
        name: "{{ system_user_name }}"
        state: present
        shell: /bin/bash
        home: "{{ system_user_home }}"
        system: true

    - name: "Ensure {{ system_user_home }} is globally readable"
      ansible.builtin.file:
        path: "{{ system_user_home }}"
        mode: 0755

  become: true
  become_user: root
  when: run_system_requirements_root

- name: Meet system requirements - Kustosz user
  block:
    - name: Setup shell wrapper for Ansible shell commands
      ansible.builtin.copy:
        dest: "{{ shell_wrapper_script }}"
        content: |
          #!/bin/bash
          /bin/bash -il "$@"
        owner: "{{ system_user_name }}"
        group: "{{ system_user_name }}"
        mode: 0755

    - name: Setup Python wrapper for Ansible shell commands
      ansible.builtin.copy:
        dest: "{{ python_wrapper_script }}"
        content: |
          #!/bin/bash -il
          kustosz-manager shell "$@"
        owner: "{{ system_user_name }}"
        group: "{{ system_user_name }}"
        mode: 0755

    - name: "Install nvm and Node.JS"
      ansible.builtin.include_role:
        name: morgangraphics.ansible_role_nvm
        apply:
          become: true
          become_user: "{{ system_user_name }}"
      vars:
        nvm_profile: "{{ system_user_home }}/.bashrc"
        nvm_install: "curl"
        nvm_version: "0.39.1"
      when:
        - not use_system_nodejs

    - name: "Check system Python meets minimal requirements"
      ansible.builtin.command: >
        {{ python_path }} -c 
        'import sys; print(sys.version_info >= (3, 9, 0))'
      register: cmd_result
      when:
        - use_system_python

    - name: "System Python doesn't meet minimal requirements"
      ansible.builtin.fail:
        msg: |
          System Python is too old; must be 3.9.0 or newer.
          Please set use_system_python variable to false
      when:
        - use_system_python
        - "'false' in cmd_result.stdout | lower"

    - name: "Install pyenv and Python"
      import_tasks: install_pyenv.yml
      when:
        - not use_system_python

  become: true
  become_user: "{{ system_user_name }}"
